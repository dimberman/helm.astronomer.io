{{ define "helm.globals" -}}
  {{- $globals := dict -}}
  {{- $_ := set $globals "baseDomain" (default "" .Values.global.baseDomain) -}}
  {{- $_ := set $globals "acme" (.Values.global.acme) -}}
  {{- $_ := set $globals "rbacEnabled" .Values.global.rbacEnabled -}}
  {{- $_ := set $globals "releaseName" (print .Release.Name | toString) -}}
  {{- $_ := set $globals "releaseNamespace" (print .Release.Namespace | toString) -}}
  {{- $_ := set $globals "releaseVersion" (print .Chart.Version | toString) -}}
  {{ $globals | toJson | print }}
{{- end }}

{{ define "commander.image" -}}
{{- if .Values.global.privateRegistry.enabled -}}
{{ .Values.global.privateRegistry.privateRegistryRepoName }}/ap-commander:{{ .Values.images.commander.tag }}
{{- else -}}
{{ .Values.images.commander.repository }}:{{ .Values.images.commander.tag }}
{{- end }}
{{- end }}

{{ define "prisma.image" -}}
{{- if .Values.global.privateRegistry.enabled -}}
{{ .Values.global.privateRegistry.privateRegistryRepoName }}/ap-prisma:{{ .Values.images.prisma.tag }}
{{- else -}}
{{ .Values.images.prisma.repository }}:{{ .Values.images.prisma.tag }}
{{- end }}
{{- end }}

{{ define "houston.image" -}}
{{- if .Values.global.privateRegistry.enabled -}}
{{ .Values.global.privateRegistry.privateRegistryRepoName }}/ap-houston-api:{{ .Values.images.houston.tag }}
{{- else -}}
{{ .Values.images.houston.repository }}:{{ .Values.images.houston.tag }}
{{- end }}
{{- end }}

{{ define "orbit.image" -}}
{{- if .Values.global.privateRegistry.enabled -}}
{{ .Values.global.privateRegistry.privateRegistryRepoName }}/ap-orbit-ui:{{ .Values.images.orbit.tag }}
{{- else -}}
{{ .Values.images.orbit.repository }}:{{ .Values.images.orbit.tag }}
{{- end }}
{{- end }}

{{ define "registry.image" -}}
{{- if .Values.global.privateRegistry.enabled -}}
{{ .Values.global.privateRegistry.privateRegistryRepoName }}/ap-registry:{{ .Values.images.registry.tag }}
{{- else -}}
{{ .Values.images.registry.repository }}:{{ .Values.images.registry.tag }}
{{- end }}
{{- end }}

{{ define "dbBootstrapper.image" -}}
{{- if .Values.global.privateRegistry.enabled -}}
{{ .Values.global.privateRegistry.privateRegistryRepoName }}/ap-db-bootstrapper:{{ .Values.images.dbBootstrapper.tag }}
{{- else -}}
{{ .Values.images.dbBootstrapper.repository }}:{{ .Values.images.dbBootstrapper.tag }}
{{- end }}
{{- end }}

{{ define "cliInstall.image" -}}
{{- if .Values.global.privateRegistry.enabled -}}
{{ .Values.global.privateRegistry.privateRegistryRepoName }}/ap-cli-install:{{ .Values.images.cliInstall.tag }}
{{- else -}}
{{ .Values.images.cliInstall.repository }}:{{ .Values.images.cliInstall.tag }}
{{- end }}
{{- end }}

{{ define "kubeReplicator.image" -}}
{{- if .Values.global.privateRegistry.enabled -}}
{{ .Values.global.privateRegistry.privateRegistryRepoName }}/ap-kube-replicator:{{ .Values.images.kubeReplicator.tag }}
{{- else -}}
{{ .Values.images.kubeReplicator.repository }}:{{ .Values.images.kubeReplicator.tag }}
{{- end }}
{{- end }}

{{ define "registry.docker.config" -}}
  {{- $domain := printf "registry.%v" .Values.global.baseDomain }}
  {{- $email := printf "admin@%v" .Values.global.baseDomain }}
  {{- $user := randAlphaNum 16 -}}
  {{- $pass := randAlphaNum 32 -}}

  {{- $config := dict "auths" -}}
  {{- $auth := dict -}}
  {{- $data := dict -}}
  {{- $_ := set $data "username" $user -}}
  {{- $_ := set $data "password" $pass -}}
  {{- $_ := set $data "email" $email -}}
  {{- $_ := set $data "auth" (printf "%v:%v" $user $pass | b64enc) -}}
  {{- $_ := set $auth $domain $data -}}
  {{- $_ := set $config "auths" $auth -}}
  {{ $config | toJson | print }}
{{- end }}

{{ define "houston.backendSecret" -}}
{{ default (printf "%s-houston-backend" .Release.Name) .Values.houston.backendSecretName }}
{{- end }}

{{ define "houston.airflowBackendSecret" -}}
{{ default (printf "%s-houston-backend" .Release.Name) .Values.houston.airflowBackendSecretName }}
{{- end }}

{{ define "houston.jwtCertificateSecret" -}}
{{ default (printf "%s-houston-jwt-certificate" .Release.Name) .Values.houston.jwtSigningCertificateSecretName }}
{{- end }}

{{ define "houston.jwtCertificatePath" -}}
/etc/houston/tls/self
{{- end }}

{{ define "houston.jwtRegistryCertificatePath" -}}
/etc/houston/tls/registry
{{- end }}

{{ define "houston.tlsRegistryCertificatePath" -}}
/usr/local/share/ca-certificates/registry.crt
{{- end }}

{{ define "registry.authSecret" -}}
{{ default (printf "%s-registry-auth" .Release.Name) .Values.registry.auth.secretName }}
{{- end }}

{{ define "houston.bootstrapperServiceAccount" -}}
{{ printf "%s-houston-bootstrapper" .Release.Name }}
{{- end }}

{{ define "prisma.bootstrapperServiceAccount" -}}
{{ printf "%s-prisma-bootstrapper" .Release.Name }}
{{- end }}

{{ define "kubeReplicator.serviceAccount" -}}
{{ printf "%s-kube-replicator" .Release.Name }}
{{- end }}

{{ define "prisma.endpoint" -}}
{{ printf "http://%s-prisma:%s/houston" .Release.Name (.Values.ports.prismaHTTP | toString) }}
{{- end }}

{{- define "registry.gcsVolume" }}
- name: gcs-keyfile
  secret:
    secretName: astronomer-gcs-keyfile
{{- end }}

{{- define "registry.gcsVolumeMount" }}
- name: gcs-keyfile
  mountPath: /var/gcs-keyfile
{{- end }}

{{- define "registry.gcsConfig" }}
gcs:
  bucket: {{ .Values.registry.gcs.bucket }}
  keyfile: {{ .Values.registry.gcs.keyfile }}
  rootdirectory: {{ .Values.registry.gcs.rootdirectory }}
  chunksize: {{ .Values.registry.gcs.chunksize }}
{{- end }}
